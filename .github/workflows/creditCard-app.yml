name: creditCard-app.yml

on:
  push:
    branches: '**'
  pull_request:
    branches: '**'

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_USER: testuser
      DB_PASSWORD: testpass
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: testdb

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for Postgres to be ready
      run: |
        until pg_isready -h localhost -p 5432; do sleep 1; done

    - name: Set up database schema
      run: |
        export PGPASSWORD=$DB_PASSWORD
        psql -h localhost -U $DB_USER -d $DB_NAME -f backend/tests/testdb/test_all_cards.sql
        psql -h localhost -U $DB_USER -d $DB_NAME -f backend/tests/testdb/test_user_db.sql
        psql -h localhost -U $DB_USER -d $DB_NAME -f backend/tests/testdb/test_card_rewards.sql
        psql -h localhost -U $DB_USER -d $DB_NAME -f backend/tests/testdb/test_user_cards.sql


    - name: Run tests
      run: |
        PYTHONPATH=$(pwd) pytest --cov=backend backend/tests/ > result.log

    - name: Upload coverage result log
      uses: actions/upload-artifact@v4
      with:
        name: test-log
        path: result.log
        retention-days: 1
        compression-level: 6
